Index: lp_lib.c
===================================================================
--- lp_lib.c	(revision 2717)
+++ lp_lib.c	(working copy)
@@ -1036,6 +1036,19 @@
     return( mat_setvalue(lp->matA, rownr, colnr, value, FALSE) );
 }
 
+REAL __WINAPI get_working_bb_dual(lprec *lp)
+{
+  REAL value = 0.0;
+
+  /* I have no idea whether this is the right set of checks. */
+  if(!lp->basis_valid)
+    report(lp, CRITICAL, "get_working_bb_dual: Not a valid basis\n");
+  else
+    value = lp->bb_limitOF;
+
+  return(value);
+}
+
 REAL __WINAPI get_working_objective(lprec *lp)
 {
   REAL value = 0.0;
Index: lp_lib.h
===================================================================
--- lp_lib.h	(revision 2717)
+++ lp_lib.h	(working copy)
@@ -2075,6 +2075,7 @@
 COUNTER __EXPORT_TYPE __WINAPI get_total_iter(lprec *lp);
 
 REAL __EXPORT_TYPE __WINAPI get_objective(lprec *lp);
+REAL __EXPORT_TYPE __WINAPI get_working_bb_dual(lprec *lp);
 REAL __EXPORT_TYPE __WINAPI get_working_objective(lprec *lp);
 
 REAL __EXPORT_TYPE __WINAPI get_var_primalresult(lprec *lp, int index);
@@ -2254,7 +2255,10 @@
 typedef int (__WINAPI read_modeldata_func)(void *userhandle, char *buf, int max_size);
 typedef int (__WINAPI write_modeldata_func)(void *userhandle, char *buf);
 MYBOOL __WINAPI MPS_readex(lprec **newlp, void *userhandle, read_modeldata_func read_modeldata, int typeMPS, int verbose);
-#if defined develop
+//#if defined develop
+#ifdef __cplusplus
+extern "C" {
+#endif
 lprec __EXPORT_TYPE * __WINAPI read_lpex(void *userhandle, read_modeldata_func read_modeldata, int verbose, char *lp_name);
 MYBOOL __EXPORT_TYPE __WINAPI write_lpex(lprec *lp, void *userhandle, write_modeldata_func write_modeldata);
 
@@ -2262,6 +2266,9 @@
 lprec __EXPORT_TYPE * __WINAPI read_freempsex(void *userhandle, read_modeldata_func read_modeldata, int verbose);
 
 MYBOOL MPS_writefileex(lprec *lp, int typeMPS, void *userhandle, write_modeldata_func write_modeldata);
+#ifdef __cplusplus
+}
 #endif
+//#endif
 
 #endif /* HEADER_lp_lib */
Index: lp_solve.def
===================================================================
--- lp_solve.def	(revision 2717)
+++ lp_solve.def	(working copy)
@@ -100,6 +100,7 @@
    get_var_priority
    get_variables
    get_verbose
+   get_working_bb_dual
    get_working_objective
    guess_basis
    has_BFP
