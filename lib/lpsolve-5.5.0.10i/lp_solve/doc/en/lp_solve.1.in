.TH lp_solve 1 "version 5.5.0.10c"
.SH NAME
lp_solve \- command-line Mixed Integer Programming (MIP) solver
.SH SYNOPSIS
.B lp_solve
.RB [ options ]
.RB [ input_file ]
.SH DESCRIPTION
.B lp_solve
is a command-line interface to the lpsolve library, a Mixed Integer
Programming (MIP) linear-programming solver. The linear programming
models are read from a model file or can be read from standard
input. The format of the model should be in one of the formats MPS or
LP.

.P 
The program uses the simplex method for solving the system of linear
equations.
.SH OPTIONS

.TP
.TP
.B \-h 
Print a brief synopsis of 
.B lp_solve 
usage and options.

.TP
.B \-lp
read from an LP-format file. This is the default behavior.

.TP
.B \-mps
read from an MPS file in fixed format. 

.TP
.B \-fmps
read from an MPS file in free format. 

.TP
.BI "\-rxli xliname " filename
Read file with xli library.

.TP
.BI "\-rxlidata " datafilename
data file name for xli library.

.TP
.BI "\-rxliopt " options
options for xli library.

.TP
.BI "\-rbas " filename	
read basis from filename.

.TP
.BI "\-rpar " filename	
read parameters from filename.

.TP
.BI "\-rparopt " options
options for parameter file:
 -H headername: header name for parameters. By default 'Default'

.TP
.BI "\-wlp " filename	
write to LP file

.TP
.BI "\-wmps " filename	
write to an MPS file in fixed format

.TP
.BI "\-wfmps " filename	
write to an MPS file in free format

.TP
.BI "\-wxli xliname " filename
write file with xli library

.TP
.BI "\-wxliopt " options
options for xli library.

.TP
.BI "-wxlisol xliname " filename
write solution file with xli library

.TP
.BI "-wxlisolopt " options
options for xli library.

.TP
.BI "-wbas " filename	
write basis to filename.

.TP
.BI "-wpar " filename	
write parameters to filename.

.TP
.BI "-wparopt " options
options for parameter file:
 -H headername: header name for parameters. By default 'Default'

.TP
.B \-wafter
Write model after solve (useful if presolve used).

.TP
.B \-parse_only
parse input file but do not solve

.TP
.B \-nonames
Ignore variables and constraint names

.TP
.B \-norownames
Ignore constraint names

.TP
.B \-nocolnames
Ignore variable names

.TP
.B \-min
Minimize the LP problem. Using this option overrules any setting in
the input model file.

.TP
.B \-max
Maximize the LP problem. Using this option overrules any setting in
the input model file.

.TP
.BI "-r " value
Specify the maximum number of pivots between a re-inversion of the matrix.

.TP
.B "-piv" rule
Specify simplex pivot rule

.P
     -piv0: Select first
     -piv1: Select according to Dantzig
     -piv2: Select Devex pricing from Paula Harris (default)
     -piv3: Select steepest edge
.TP
.P
These pivot rules can be combined with any of the following:
.TP
     -pivf: In case of Steepest Edge, fall back to DEVEX in primal.
     -pivm: Multiple pricing.
     -piva: Temporarily use First Index if cycling is detected.
     -pivr: Adds a small randomization effect to the selected pricer.
     -pivll: Scan entering/leaving columns left rather than right.
     -pivla: Scan entering/leaving columns alternatingly left/right.
     -pivh: Use Harris' primal pivot logic rather than the default.
     -pivt: Use true norms for Devex and Steepest Edge initializations.

.TP
.B "-s"mode scaleloop
Use automatic problem scaling.
.P
     -s0: No scaling
     -s1: Geometric scaling (default)
     -s2: Curtis-reid scaling
     -s3: Scale to convergence using largest absolute value
     -s4: Numerical range-based scaling
     -s5: Scale to convergence using logarithmic mean of all values
     -s6: Scale based on the simple numerical range
     -s7: Scale quadratic
.TP
.P
These scaling rules can be combined with any of the following:
.TP
     -sp: also do power scaling.
     -si: also do Integer scaling (default).
     -se also do equilibration to scale to the -1..1 range (default).
.TP
.B \-presolve
presolve rows and columns of problem before start optimizing

.TP
.B \-presolverow
resolve rows of problem before start optimizing

.TP
.B \-presolvecol
resolve columns of problem before start optimizing

.TP
.B \-presolvel
Eliminate linearly dependent rows

.TP
.B \-presolves
Convert constraints to Special-ordered sets of Type 1 (SOS1)

.TP
.B \-presolver
Af the phase 1 solution process finds that a constraint is redundant,
then this constraint is deleted

.TP
.B \-presolvek
Simplification of knapsack-type constraints through addition of an
extra variable, which also helps bound the OF

.TP
.B \-presolveq
Direct substitution of one variable in 2-element equality
constraints; this requires changes to the constraint matrix
.TP
.B \-presolvem
Merge rows
.TP

.B \-presolvefd
COLFIXDUAL
.TP

.B \-presolvebnd
Presolve bounds

.TP
.B \-presolved
Presolve duals
.TP

.B \-presolvef
Identify implied free variables (releasing their explicit bounds)
.TP

.B \-presolveslk
IMPLIEDSLK

.TP
.B \-presolveg
Reduce (tighten) coefficients in integer models based on GCD argument

.TP
.B \-presolveb
Attempt to fix binary variables at one of their bounds

.TP
.B \-presolvec
Attempt to reduce coefficients in binary models

.TP
.B \-presolverowd
Idenfify and delete qualifying constraints that are dominated by
others, also fixes variables at a bound

.TP
.B \-presolvecold
Deletes variables (mainly binary), that are dominated by others (only
one can be non-zero)

TO BE CONTINUED....
